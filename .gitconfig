[user]
	name = Naoyoshi Aikawa
	email = n.aikawa91@gmail.com
[color]
  ui = auto
[alias]
  amend = commit --amend -C HEAD
  co = checkout
  logg = log --stat --decorate=short --pretty=format:'%C(yellow)%h %Cgreen%cr %Cblue%cn%Cred%d %Creset%s %C(cyan)%b'
  mergelog = log --merges --pretty=format:'%C(yellow)%h %Cgreen%ci %Cblue%cn%Cred%d %Creset%s %C(cyan)%b'
  releaselog = log --merges --pretty=format:'- %C(cyan)\"%b\" %Creset%s %Cred%d'
  history = log --graph --date=short --decorate=short --pretty=format:'%C(yellow)%h %Cgreen%cd %Cblue%cn%Cred%d %Creset%s'
  unmerged = !git --no-pager diff --name-only --diff-filter=U
  default-branch = !git symbolic-ref --short refs/remotes/origin/HEAD | sed 's@^origin/@@'
  alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
	sync = !MASTER=`git symbolic-ref --short refs/remotes/origin/HEAD | sed 's@^origin/@@'` && git checkout $MASTER && git pull origin $MASTER && git fetch -p origin && git branch -d $(git branch --merged | grep -v $MASTER | grep -v '*')
	sync-del = !MASTER=`git symbolic-ref --short refs/remotes/origin/HEAD | sed 's@^origin/@@'` && git checkout $MASTER && git pull origin $MASTER && git fetch -p origin && git branch -d $(git branch --merged | grep -v $MASTER | grep -v '*') && git push origin $(git branch -r --merged | grep origin/ | grep -v $MASTER | sed s~origin/~:~)
  ignore = "!gi() { curl -sL https://www.toptal.com/developers/gitignore/api/$@ ;}; gi"
	showpr = "!f() { git log --merges --oneline --reverse --ancestry-path $1...master | grep 'Merge pull request #' | head -n 1; }; f"
	openpr = "!f() { gh browse -- `git log --merges --oneline --reverse --ancestry-path $1...master | grep 'Merge pull request #' | head -n 1 | cut -f5 -d' ' | sed -e 's%#%%'`; }; f"
  cm = "!f() { \
      add_flag=''; \
      while [ $# -gt 0 ]; do \
          case $1 in \
              -a|--all) add_flag='-u' ;; \
              -A|--all-new) add_flag='-A' ;; \
          esac; \
          shift; \
      done; \
      [ -n \"$add_flag\" ] && git add $add_flag; \
      msg=$(git diff --staged | claude -p 'Based on these changes, generate a concise commit message following conventional commits format. Output only commit message.'); \
      git commit -m \"$msg\"; \
  }; f"
[core]
  editor = emacs
[mergetool "diffmerge"]
  cmd = diffmerge --merge --result=$MERGED $LOCAL $BASE $REMOTE
  trustExitCode = true
[merge]
  tool = diffmerge
[mergetool]
  keepBackup = false
[diff]
  tool = diffmerge
[difftool "diffmerge"]
  cmd = diffmerge $LOCAL $REMOTE
[push]
  default = current
[credential]
  helper = osxkeychain
[ghq]
  root = ~/src
[url "git@github.com:"]
  insteadOf = https://github.com/
[mailmap]
	file = ~/.mailmap
[github]
	user = awakia
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = false
[init]
	defaultBranch = main
